{
	"kind": "Template",
	"apiVersion": "v1",
	"metadata": {
		"name": "mod-wsgi-example",
		"annotations": {
			"openshift.io/display-name": "mod-wsgi-example",
			"description": "An mod-wsgi-example example , see https://github.com/zyberit/openshift-mod-wsgi-example/blob/master/README.md.",
			"tags": "mod-wsgi-example,httpd",
			"iconClass": "icon-apache",
			"template.openshift.io/long-description": "This template defines resources needed to develop a static application served by mod-wsgi-example, including a build configuration and application deployment configuration.",
			"template.openshift.io/provider-display-name": "Zyberit",
			"template.openshift.io/documentation-url": "https://github.com/zyberit/openshift-mod-wsgi-example",
			"template.openshift.io/support-url": "https://github.com/zyberit"
		}
	},
	"message": "The following service(s) have been created in your project: ${NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/httpd-ex/blob/master/README.md.",
	"labels": {
		"template": "mod-wsgi-example"
	},
	"objects": [
		{
			"kind": "Service",
			"apiVersion": "v1",
			"metadata": {
				"name": "${NAME}",
				"annotations": {
					"description": "Exposes and load balances the application pods"
				}
			},
			"spec": {
				"ports": [
					{
						"name": "web",
						"port": 80,
						"targetPort": 80
					}
				],
				"selector": {
					"name": "${NAME}"
				}
			}
		},
		{
			"kind": "Route",
			"apiVersion": "v1",
			"metadata": {
				"name": "${NAME}",
				"annotations": {
					"template.openshift.io/expose-uri": "http://{.spec.host}{.spec.path}"
				}
			},
			"spec": {
				"host": "${APPLICATION_DOMAIN}",
				"to": {
					"kind": "Service",
					"name": "${NAME}"
				}
			}
		},
		{
			"kind": "ImageStream",
			"apiVersion": "v1",
			"metadata": {
				"name": "${NAME}",
				"annotations": {
					"description": "Keeps track of changes in the application image"
				}
			}
		},
		{
			"kind": "ImageStream",
			"apiVersion": "v1",
			"metadata": {
				"name": "mod-wsgi-docker",
				"annotations": {
					"description": "grahamdumpleton/mod-wsgi-docker:python-3.5-onbuild"
				}
			},
			"spec": {
				"tags": [
					{
						"annotations": {
							"openshift.io/imported-from": "grahamdumpleton/mod-wsgi-docker:python-3.5-onbuild"
						},
						"from": {
							"kind": "DockerImage",
							"name": "grahamdumpleton/mod-wsgi-docker:python-3.5-onbuild"
						},
						"generation": 2,
						"importPolicy": {
							
						},
						"name": "python-3.5-onbuild",
						"referencePolicy": {
							"type": "Source"
						}
					}
				]
			}
		},
		{
			"kind": "BuildConfig",
			"apiVersion": "v1",
			"metadata": {
				"name": "${NAME}",
				"annotations": {
					"description": "Defines how to build the application"
				}
			},
			"spec": {
				"source": {
					"type": "Git",
					"git": {
						"uri": "${SOURCE_REPOSITORY_URL}",
						"ref": "${SOURCE_REPOSITORY_REF}"
					},
					"contextDir": "${CONTEXT_DIR}"
				},
				"strategy": {
					"type": "Docker",
					"dockerStrategy": {
						"from": {
							"kind": "ImageStreamTag",
							"name": "mod-wsgi-docker:python-3.5-onbuild"
						}
					}
				},
				"output": {
					"to": {
						"kind": "ImageStreamTag",
						"name": "${NAME}:latest"
					}
				},
				"triggers": [
					{
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					},
					{
						"type": "GitHub",
						"github": {
							"secret": "${GITHUB_WEBHOOK_SECRET}"
						}
					},
					{
						"type": "Generic",
						"generic": {
							"secret": "${GENERIC_WEBHOOK_SECRET}"
						}
					}
				]
			}
		},
		{
			"kind": "DeploymentConfig",
			"apiVersion": "v1",
			"metadata": {
				"name": "${NAME}",
				"annotations": {
					"description": "Defines how to deploy the application server"
				}
			},
			"spec": {
				"strategy": {
					"type": "Rolling"
				},
				"triggers": [
					{
						"type": "ImageChange",
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${NAME}"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${NAME}:latest"
							}
						}
					},
					{
						"type": "ConfigChange"
					}
				],
				"replicas": 1,
				"selector": {
					"name": "${NAME}"
				},
				"template": {
					"metadata": {
						"name": "${NAME}",
						"labels": {
							"name": "${NAME}"
						}
					},
					"spec": {
						"containers": [
							{
								"name": "${NAME}",
								"image": " ",
								"ports": [
									{
										"containerPort": 80
									}
								],
								"resources": {
									"limits": {
										"memory": "${MEMORY_LIMIT}"
									}
								},
								"env": []
							}
						]
					}
				}
			}
		}
	],
	"parameters": [
		{
			"name": "NAME",
			"displayName": "Name",
			"description": "The name assigned to all of the frontend objects defined in this template.",
			"required": true,
			"value": "mod-wsgi-example"
		},
		{
			"name": "NAMESPACE",
			"displayName": "Namespace",
			"description": "The OpenShift Namespace where the ImageStream resides.",
			"required": true,
			"value": "openshift"
		},
		{
			"name": "MEMORY_LIMIT",
			"displayName": "Memory Limit",
			"description": "Maximum amount of memory the container can use.",
			"required": true,
			"value": "512Mi"
		},
		{
			"name": "SOURCE_REPOSITORY_URL",
			"displayName": "Git Repository URL",
			"description": "The URL of the repository with your application source code.",
			"required": true,
			"value": "https://github.com/zyberit/django-template.git"
		},
		{
			"name": "SOURCE_REPOSITORY_REF",
			"displayName": "Git Reference",
			"description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
		},
		{
			"name": "CONTEXT_DIR",
			"displayName": "Context Directory",
			"description": "Set this to the relative path to your project if it is not in the root of your repository."
		},
		{
			"name": "APPLICATION_DOMAIN",
			"displayName": "Application Hostname",
			"description": "The exposed hostname that will route to the httpd service, if left blank a value will be defaulted.",
			"value": ""
		},
		{
			"name": "GITHUB_WEBHOOK_SECRET",
			"displayName": "GitHub Webhook Secret",
			"description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{40}"
		},
		{
			"name": "GENERIC_WEBHOOK_SECRET",
			"displayName": "Generic Webhook Secret",
			"description": "A secret string used to configure the Generic webhook.",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{40}"
		}
	]
}
